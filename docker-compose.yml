version: '3.8'

services:
  spring-app:
    image: openjdk:17-jdk
    container_name: spring-app
    ports:
      - "8081:8080"
    volumes:
      - ./app.jar:/app.jar
    command: ["java", "-jar", "/app.jar"]
    environment:
      - JWT_SECRET= MySuperSecretKeyMySuperSecretKey123!
      - JWT_EXPIRATION= 86400000 # 1 g√ºn
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-master:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - postgres-master
    networks:
      - monitoring

  postgres-master:
    image: postgres:15
    container_name: postgres-master
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT_MASTER}:5432"
    volumes:
      - master_data:/var/lib/postgresql/data
    networks:
      - monitoring
  postgres-replica:
    image: postgres:15
    container_name: postgres-replica
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT_REPLICA}:5432"
    depends_on:
      - postgres-master
    volumes:
      - replica_data:/var/lib/postgresql/data
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - monitoring

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - monitoring



volumes:
  master_data:
  replica_data:

networks:
  monitoring:
